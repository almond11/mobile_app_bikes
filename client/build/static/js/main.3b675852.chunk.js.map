{"version":3,"sources":["OpacityBackgroundImg.js","WeatherWidget/OpenWeatherIcon.js","WeatherWidget/_utils.js","WeatherWidget/TemperatureConverter.js","WeatherWidget/SearchBar.js","WeatherWidget/index.js","AboutPanel.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["OpacityBackgroundImg","_ref","opacity","imgSrc","react_default","a","createElement","id","style","Number","src","concat","alt","OpenWeatherIcon","weather","className","icon","description","kelvinConverter","k","Math","round","TempUnit","type","isCelcius","switchUnit","onClick","TempSwitch","_ref2","TemperatureConverter_TempUnit","TempValue","_ref3","value","TemperatureConverter","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","unitType","window","localStorage","getItem","state","bind","assertThisInitialized","setItem","setState","temp","props","toggle","TemperatureConverter_TempValue","TemperatureConverter_TempSwitch","Component","ErrorMessage","message","Spinner","SearchBar","search","error","loading","handleChange","onSubmit","setLoading","handleSearchError","getWeather","bool","update","e","target","length","toUpperCase","err","console","log","query","_this2","fetch","then","res","json","data","cod","Error","errorMsg","onFound","catch","_this3","navigator","geolocation","getCurrentPosition","pos","_pos$coords","coords","latitude","longitude","posError","preventDefault","transitioning","handleGeolocation","placeholder","onChange","SearchBar_ErrorMessage","SearchBar_Spinner","ResetIcon","Location","city","country","Description","substring","WeatherPanel","_ref4","reset","WeatherWidget_Location","WeatherWidget_Description","display","alignItems","width","src_WeatherWidget_OpenWeatherIcon","TemperatureConverter_TemperatureConverter","WeatherWidget_ResetIcon","WeatherWidget","setWeatherData","clearWeatherData","setTimeout","name","sys","main","WeatherWidget_WeatherPanel","celcius","toggleTemp","SearchBar_SearchBar","AboutPanel","close","href","rel","Footer","openAboutPanel","App","about","closeAboutPanel","src_OpacityBackgroundImg_0","WeatherWidget_WeatherWidget","src_Footer_0","src_AboutPanel_0","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b675852.chunk.js","sourcesContent":["import React from 'react';\nimport './OpacityBackgroundImg.css'\n\nconst OpacityBackgroundImg = ({\n  opacity,\n  imgSrc\n})=>(\n  <img\n    id='background-image'\n    style={Number(opacity)>=0?{opacity}:{}}\n    src={`/images/${imgSrc}`}\n    alt=''\n  />\n)\n\nexport default OpacityBackgroundImg;\n","import React from 'react'\nimport './OpenWeatherIcon.css';\n\n//TODO: fix alts breaking page on mobile.\n\nconst OpenWeatherIcon = ({\n weather\n}) => (\n  <div className='weather-icon-container'>\n    <img\n      className='weather-icon'\n      src={`https://openweathermap.org/img/w/${weather.icon}.png`}\n      alt={weather.description}\n    />\n  </div>\n)\n\nexport default OpenWeatherIcon\n","const API_URL = 'https://m-michelini-weather-widget-api.glitch.me/api/';\n\nexport const kelvinConverter = {\n  toCelcius:k=>Math.round(k-273),\n  toFarenheight:k=>Math.round((k-273)*9/5+32)\n}\n\nexport const fetchWeather = query => {\n  return fetch(`${API_URL}?search=${query}`)\n    .then(res=>{\n      return res.json();\n    }).then(data=>{\n      if(data.cod===200){\n        return data\n      }else{\n        throw(new Error(data.errorMsg||\"Something went wrong.\"))\n      }\n    })\n  }\n","import React, {Component} from 'react';\n\nimport './TemperatureConverter.css';\nimport {kelvinConverter} from './_utils'\n\nconst TempUnit = ({type,isCelcius,switchUnit}) => (\n  <div className={`temperature-unit${isCelcius===(type!==\"F\")?'-active':''}`} onClick={()=>switchUnit(type)}>\n    <span className='superscript'>\n      o\n    </span>\n    {type}\n  </div>\n)\nconst TempSwitch = ({isCelcius,switchUnit})=>(\n  <div className='temperature-switch'>\n    <TempUnit isCelcius={isCelcius} type=\"C\" switchUnit={switchUnit} />\n    <TempUnit isCelcius={isCelcius} type=\"F\" switchUnit={switchUnit} />\n  </div>\n)\nconst TempValue = ({value})=>(\n  <div className='temperature-value'>{value}</div>\n)\n\nexport default class TemperatureConverter extends Component{\n  constructor(){\n    super();\n    const unitType = window.localStorage.getItem('unit-type');\n    this.state = {\n      isCelcius: unitType!==\"F\"\n    }\n\n    this.switchUnit = this.switchUnit.bind(this);\n  }\n\n  switchUnit(type){\n    window.localStorage.setItem('unit-type',type)\n    this.setState({isCelcius:type!=='F'});\n  }\n\n  render(){\n    const temp = this.state.isCelcius ?\n      kelvinConverter.toCelcius(this.props.temp):\n      kelvinConverter.toFarenheight(this.props.temp);\n    return(\n      <div\n        className='temperature-container'\n        onClick={this.toggle}\n      >\n        <TempValue value={temp} />\n        <TempSwitch isCelcius={this.state.isCelcius} switchUnit={this.switchUnit} />\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport {fetchWeather} from './_utils';\n\nimport './SearchBar.css';\n\nconst ErrorMessage = ({message}) => (\n  <div id='search-error'><i className=\"fas fa-exclamation-triangle\"></i> {message}</div>\n)\nconst Spinner = () => (\n  <i id=\"search-spinner\" className=\"fas fa-spinner\"></i>\n)\n\nexport default class SearchBar extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      search:'',\n      error:null,\n      loading:false\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.setLoading = this.setLoading.bind(this);\n    this.handleSearchError = this.handleSearchError.bind(this);\n    this.getWeather = this.getWeather.bind(this);\n  }\n  setLoading(bool){\n    const update = {\n      loading:!!bool\n    }\n    if(this.state.error){\n      update.error = null;\n    }\n    this.setState(update)\n  }\n  handleChange(e){\n    const update = {\n      search:e.target.value.length!==1 ? e.target.value : e.target.value.toUpperCase()\n    }\n    if(this.state.error){\n      update.error = null;\n    }\n    this.setState(update);\n  }\n  handleSearchError(err){\n    console.log(err);\n    this.setState({error:err.message,loading:false});\n  }\n\n  getWeather(search){\n    this.setLoading(true);\n    fetchWeather(search)\n    .then(res=>{\n      this.setLoading(false);\n      return res;\n    })\n    .then(this.props.onFound)\n    .catch(this.handleSearchError);\n  }\n\n  handleGeolocation(){\n    if(navigator && navigator.geolocation){\n      return navigator\n        .geolocation\n        .getCurrentPosition(pos=>{\n          const {latitude,longitude} = pos.coords;\n          this.getWeather(`[${latitude},${longitude}]`);\n        },posError=>{\n          this.handleSearchError({message:\"Geolocation permission denied.\"})\n        })\n    }else{\n      this.handleSearchError({message:\"Geolocation unavailable.\"})\n    }\n  }\n\n  onSubmit(e){\n    e.preventDefault();\n    if(this.props.transitioning||this.state.loading) return;\n    if(this.state.search===''){\n      this.handleGeolocation();\n    }else{\n      this.getWeather(this.state.search);\n    }\n  }\n\n  render(){\n    return(\n      <div className={`search-container${this.props.transitioning?' transitioning':''}`}>\n        <form\n          onSubmit={this.onSubmit}\n          className='search-form'\n        >\n          <input\n            className=\"search-bar\"\n            type=\"text\"\n            value={this.state.search}\n            placeholder='Location'\n            onChange={this.handleChange}\n          />\n          <button\n            className='search-button'\n            onClick={this.onSubmit}\n          >\n            <i className=\"fas fa-map-marker-alt fa-2x\"></i>\n          </button>\n        </form>\n        {this.state.error ? <ErrorMessage message={this.state.error}/>:null}\n        {this.state.loading ? <Spinner />:null}\n      </div>\n    )\n  }\n}\n","import React,{Component} from 'react';\n\nimport OpenWeatherIcon from './OpenWeatherIcon'\nimport TemperatureConverter from './TemperatureConverter';\nimport SearchBar from './SearchBar';\n\nimport './index.css'\n\nconst ResetIcon = ({onClick}) => (\n  <i className='weather-search-button fas fa-redo' onClick={onClick}></i>\n);\n\nconst Location = ({city,country})=>(\n  <div className='weather-location'>{city}, {country}</div>\n);\nconst Description = ({description})=>(\n  <div className='weather-description'>\n    {description[0].toUpperCase()+description.substring(1)}\n  </div>\n);\n\nconst WeatherPanel = ({\n  city,\n  country,\n  weather,\n  temp,\n  reset,\n  transitioning\n}) => (  weather ?\n  <div className={`weather-panel${transitioning?' transitioning':''}`}>\n    <Location city={city} country={country} />\n    <Description description={weather.description} />\n    <div style={{display:'flex', alignItems:'center',width:300}}>\n      <OpenWeatherIcon weather={weather} />\n      <TemperatureConverter temp={temp} />\n    </div>\n    <ResetIcon onClick={reset} />\n  </div> : <div/>\n)\n\nexport default class WeatherWidget extends Component{\n  constructor(){\n    super();\n    this.state = {\n      city:null,\n      country:null,\n      temp:null,\n      weather:null,\n      transitioning:false,\n    }\n    this.setWeatherData = this.setWeatherData.bind(this);\n    this.clearWeatherData = this.clearWeatherData.bind(this);\n  }\n  setWeatherData(data){\n    this.setState({transitioning:true});\n    setTimeout(()=>{\n      this.setState({\n        city:data.name,\n        country:data.sys.country,\n        temp:data.main.temp,\n        weather:data.weather[0],\n        transitioning:false\n      });\n    },400);\n  }\n\n  clearWeatherData(){\n    this.setState({transitioning:true});\n    setTimeout(()=>{\n      this.setState({\n        city:null,\n        country:null,\n        temp:null,\n        weather:null,\n        transitioning:false\n      })\n    },400);\n  }\n  render(){\n    return(\n      !this.state.weather?\n      <SearchBar\n        onFound={this.setWeatherData}\n        transitioning={this.state.transitioning}\n      />:\n      <WeatherPanel\n        city={this.state.city}\n        country={this.state.country}\n        temp={this.state.temp}\n        celcius={this.state.celcius}\n        weather={this.state.weather}\n        transitioning={this.state.transitioning}\n        reset={this.clearWeatherData}\n        toggleTemp={this.toggleTemp}\n      />\n    )\n  }\n}\n","import React from 'react';\nimport './AboutPanel.css';\n\nconst AboutPanel = ({close}) => (\n  <div id=\"about-container\">\n    <div id=\"about-opaque-background\" onClick={close}/>\n    <section id=\"about-panel\">\n      <i onClick={close} id='about-close' className=\"fa fa-times-circle\"></i>\n      <h3 id=\"about-title\">Description</h3>\n      <p>\n        A weather application that gets the weather at a given location, or the users\n        current location if permission is given. The app was built with Node.js\n        and Express on the backend, and React.js on the client side. All data and icons related to\n        weather are from <a\n          href=\"https://openweathermap.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >openweathemap.org</a>. For any other developer info, you can head over\n        to my <a\n          href=\"https://github.com/M-Michelini/react-weather-widget\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >github</a>.\n      </p>\n      <h3 id=\"about-usage\">Usage</h3>\n      <p>\n        Getting the weather is simple! You can search in 3 possible formats, If the input is;\n      </p>\n      <ul>\n        <li>empty, your location is used.</li>\n        <li>inside square brackets, it will be parsed as 2 comma seperated\n        decimal degree values, representing the latitude and longitude respectively.\n        </li>\n        <li>of any other format, it will be parsed as the locations name.</li>\n      </ul>\n    </section>\n  </div>\n)\n\nexport default AboutPanel;\n","import React from 'react';\n\nimport './Footer.css';\n\nconst Footer = ({\n  openAboutPanel\n})=>(\n  <div id=\"footer\">\n    <a\n      className='footer-link'\n      href=\"https://github.com/M-Michelini/react-weather-widget\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <i className=\"fab fa-github\"></i>\n    </a>\n    <div\n      className='footer-link'\n      onClick={openAboutPanel}\n    >\n      <i className=\"fas fa-info-circle\"></i>\n    </div>\n  </div>\n)\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nimport OpacityBackgroundImg from './OpacityBackgroundImg';\nimport WeatherWidget from './WeatherWidget';\nimport AboutPanel from './AboutPanel';\nimport Footer from './Footer';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      about:false\n    };\n    this.openAboutPanel = this.openAboutPanel.bind(this);\n    this.closeAboutPanel = this.closeAboutPanel.bind(this);\n  }\n\n  openAboutPanel(){\n    this.setState({about:true})\n  }\n  closeAboutPanel(){\n    this.setState({about:false})\n  }\n  render() {\n    return (\n      <div className=\"main\">\n        <OpacityBackgroundImg imgSrc={'weather-background.jpg'} opacity={0.2} />\n        <div className='app'>\n          <h1 className='app-header'>Weather Widget</h1>\n          <WeatherWidget />\n          <Footer openAboutPanel={this.openAboutPanel}/>\n        </div>\n        {this.state.about?<AboutPanel close={this.closeAboutPanel}/>:null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}